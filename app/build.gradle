apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.hsb.gradlecompile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
        }

        release {
            applicationIdSuffix ".release"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        dev {
            applicationIdSuffix ".dev"
            minifyEnabled false
            //解决 androidlib 不包含构建类型dev时报错的情况，matchingFallbacks 设置dev匹配 androidlib 的debug构建类型
            //如果 androidlib 存在app没有的构建类型也不会报错
            matchingFallbacks = ["debug"]
        }
    }

    //1.app 和依赖库 androidlib 拥有相同的维度，但是app 存在依赖库所没有的变种(free)，那么也要使用 matchingFallbacks 来提供变种匹配
    //2.依赖库 androidlb2 拥有 app 所没有的维度"size"，当app要构建"freeDebug"版本时不知道该使用 androidlb2 的largeDebug还是normalDebug，
    //  使用 missingDimensionStrategy 'normal'
    flavorDimensions "tier"
    productFlavors{
        free{
            applicationIdSuffix ".free"
            dimension "tier"
            matchingFallbacks = ["demo","other"]
            missingDimensionStrategy 'size','nomal','large'
        }
        pay{
            applicationIdSuffix ".pay"
            dimension "tier"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar","*.aar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project("::androidlib")
    implementation project("::androidlb2")
    implementation project("::kotlinlib")

    //compileOnly + implementation = api
    compileOnly 'com.gyf.immersionbar:immersionbar:3.0.0'

    implementation ('com.github.bumptech.glide:glide:4.11.0'){
        exclude group:"com.github.bumptech.glide",module:"gifdecoder"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
}